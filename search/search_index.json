{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MkDocs Material Template","text":"<p>This is an MkDocs Material Template repository. It enables a useful set of extensions and plugins by default, and contains a Makefile that uses Docker to serve the documentation locally, and a Github workflow to publish the documentation on Github Pages by default.</p> <p>To use, invoke:</p> <pre><code>make\n</code></pre> <p>This will publish the documentation at localhost:8000 by default, and watch for any changes to the documentation source files. Other targets in the <code>Makefile</code> include:</p> <ul> <li><code>serve</code> (default) \u2014 Serves the documentation and watches for changes.</li> <li><code>build</code> \u2014 Builds the documentation.</li> <li><code>gh-deploy</code> \u2014 Deploys the documentation to Github Pages.</li> <li><code>version</code> \u2014 Prints the version information.</li> <li><code>help</code> \u2014 Prints help information.</li> </ul> <p>MkDocs Material Documentation</p>"},{"location":"#customization","title":"Customization","text":"<p>Change the fields in <code>mkdocs.yml</code> to suit your needs. In particular, change the <code>site_name</code>, <code>site_description</code> and <code>site_author</code>, and the URLs for <code>repo_url</code> (where the Github button links to) and <code>edit_uri</code> (where the pages can be edited).</p>"},{"location":"#adding-plugins","title":"Adding Plugins","text":"<p>A few plugins have been enabled by default. To add additional plugins, add them to the <code>plugins</code> section of <code>mkdocs.yml</code> (documentation) and the required packages to <code>requirements.txt</code>. The plugins are automatically installed into the Docker image.</p>"},{"location":"#updating-mkdocs-material","title":"Updating MkDocs Material","text":"<p>To change the version of MkDocs Material, change the version number in <code>requirements.txt</code>. The version is automatically updated in the Docker image as well.</p>"},{"location":"#serving-on-a-different-port","title":"Serving on a Different Port","text":"<p>By default the documentation is served on port <code>8000</code>. To change the default temporarily, invoke <code>make</code> like this:</p> <pre><code>make PORT=8080\n</code></pre> <p>To permanently chang the port, change the value of <code>PORT</code> in the <code>Makefile</code>.</p> <pre><code>PORT ?= 8080\n</code></pre>"},{"location":"#makefile-on-top-level","title":"Makefile on Top-Level","text":"<p>If you want to have the <code>Makefile</code> on the top level instead of in the <code>docs/</code> directory, move it to the top level directory and change the <code>ROOT</code> variable in the <code>Makefile</code> to:</p> <pre><code>ROOT ?= $(DIR)/.\n</code></pre> <p>Note the slash-dot <code>/.</code> at the end. The <code>ROOT</code> directory points to the directory with <code>mkdocs.yml</code> relative to the <code>Makefile</code>.</p>"},{"location":"#different-branch","title":"Different branch","text":"<p>The template assumes your default branch is named <code>main</code> or <code>master</code>. If it's named something else, change the <code>on push branches</code> in <code>.github/workflows/docs.yml</code>:</p> <pre><code>on:\npush:\nbranches:\n- my-docs-branch\n</code></pre>"},{"location":"deploying/","title":"Deploying","text":"<p>This documentation can be deployed on Github (<code>.github/workflows/docs.yml</code>) or Gitlab (<code>.gitlab-ci.yml</code>).</p>"},{"location":"update-template/","title":"Updating to Latest Template","text":"<p>This page describes how to update your documentation to include the latest changes to the template repository.</p>"},{"location":"update-template/#template-remote","title":"Template Remote","text":"<p>To update to the latest version of the template, first ensure the template repository is added as a remote for the documentation repository:</p> <pre><code>git remote -v\n\norigin      git@github.com:MyUsername/my-docs-repo.git (fetch)\norigin      git@github.com:MyUsername/my-docs-repo.git (push)\ntemplate    git@github.com:Virtlink/mkdocs-material-template.git (fetch)\ntemplate    git@github.com:Virtlink/mkdocs-material-template.git (push)\n</code></pre> <p>If not, add the template remote repository:</p> <pre><code>git remote add template git@github.com:Virtlink/mkdocs-material-template.git\n</code></pre>"},{"location":"update-template/#fetch-latest-changes","title":"Fetch Latest Changes","text":"<p>Fetch the changes in the template remote:</p> <pre><code>git fetch template\n</code></pre>"},{"location":"update-template/#merge-latest-changes","title":"Merge Latest Changes","text":"<p>Merge the latest changes from the template's <code>main</code> branch into your repository:</p> <pre><code>git merge template/main\n</code></pre> Unrelated Histories <p>If you get the error <code>fatal: refusing to merge unrelated histories</code>, then your documentation repository was never based on the template. However, you can force Git to merge the template anyway by using this command:</p> <pre><code>git merge template/main --allow-unrelated-histories\n</code></pre>"},{"location":"update-template/#fix-any-conflicts-and-commit","title":"Fix Any Conflicts, and Commit","text":"<p>Now use the Git command line to fix any merge conflicts, and commit the result.</p>"},{"location":"update-template/#fix-the-breaking-changes","title":"Fix the Breaking Changes","text":"<p>New versions of MkDocs and MkDocs Material can have breaking changes. Find them here.</p>"}]}